
; UVG
; EQU MACROS Y ESTADOS
;***
#include "p16f887.inc"

    ;probando 
    ; version pwm 
; CONFIG1
; __config 0xFCD4
 __CONFIG _CONFIG1, _FOSC_INTRC_NOCLKOUT & _WDTE_OFF & _PWRTE_OFF & _MCLRE_OFF & _CP_OFF & _CPD_OFF & _BOREN_OFF & _IESO_OFF & _FCMEN_OFF & _LVP_OFF
; CONFIG2
; __config 0xFFFF
 __CONFIG _CONFIG2, _BOR4V_BOR40V & _WRT_OFF
 
 
GPR_VAR	    UDATA
DELAY1	    RES	1
W_TEMP	    RES	1
STATUS_TEMP RES	1
MELO	    RES	1
CONTADOR    RES	1
MELA	    RES	1
MELE	    RES	1
MELU	    RES	1
DMELO	    RES	1
DMELA	    RES	1
DMELE	    RES	1
DMELU	    RES	1
MELOM	    RES	1
MELAM	    RES	1
MELEM	    RES	1
MELUM	    RES	1
BANDERA	    RES 1
RES_VECT    CODE    0x0000		; processor reset vector
    GOTO    START			; go to beginning of program

ISR_VECT    CODE    0x0004
PUSH:
    MOVWF   W_TEMP
    SWAPF   STATUS, W
    MOVWF   STATUS_TEMP
ISR:
    BTFSC   INTCON, T0IF
    CALL    JUMPADC
    MOVLW   .250
    MOVWF   TMR0
    BCF	    INTCON, T0IF
POP:
    SWAPF   STATUS_TEMP, W
    MOVWF   STATUS
    SWAPF   W_TEMP, F
    SWAPF   W_TEMP, W
    RETFIE
; TODO ADD INTERRUPTS HERE IF USED
;    
;    
;PWM_RUT
;    INCF    CONTADOR
;    MOVF    CONTADOR, W
;    XORWF   MELO, W
;    BTFSC   STATUS, Z
;    BSF	    PORTB, 7
;    BCF	    PORTB, 7
;    BCF	    STATUS, Z
;    BCF	    INTCON, T0IF
    
    RETURN
;-------------------------------PRINCIPAL---------------------------------------
MAIN_PROG CODE                      ; let linker place main program

START
    CALL    CONFIG_OSCILATOR
    CALL    CONFIG_IO
    CALL    CONFIG_ADC
    CALL    CONFIG_PWM
    CALL    CONFIG_TX_RX
    CALL    CONFIG_T0
    CALL    CONFIG_INTERRUPT
    BANKSEL PORTA
    ;GOTO    LOOP1
    
LOOP1:
    
    GOTO LOOP1
;    BCF	    PORTB,5
;    BSF	    PORTB,4
;    BTFSC   PORTD,0
;    GOTO    PRESS1
    		; EMPIECE LA CONVERSIÓN
CHECKADC1:
    BCF	    ADCON0,CHS0
    BCF	    ADCON0, CHS1
    CALL    DELAY_500US
    BSF    ADCON0, GO
    BTFSC   ADCON0, GO		; LOOP HASTA QUE TERMINE DE CONVERTIR
    GOTO    $-1
    MOVF    ADRESH, W
    ;MOVWF   PORTB			; MUEVE LA CONVERSION AL PUERTO B
    BCF	    PIR1, ADIF		; BORRAMOS BANDERA DE
;    RRF	    ADRESH, F		
;    RRF	    ADRESH, F
;    RRF	    ADRESH, W		; LE QUITAMOS LOS 3 BITS MENOS SIGNIFICATIVOS A LA CONVERSION
;    ANDLW   B'00011111'
    MOVWF   MELO			; MOVEMOS EL VALOR HACIA EL PERÍODO DEL PWM
    ;MOVWF   CCPR2L
    CALL    DELAY_SERVO1
    CALL    DELAY_50US
    MOVF    MELO,W
    CALL    CHECK_TXIF
    RETURN
    
    
CHECKADC2:
    BSF	    ADCON0,CHS0
    BCF	    ADCON0, CHS1
    CALL    DELAY_500US
    BSF    ADCON0, GO
    BTFSC   ADCON0, GO		; LOOP HASTA QUE TERMINE DE CONVERTIR
    GOTO    $-1
    MOVF    ADRESH, W
    ;MOVWF   PORTB			; MUEVE LA CONVERSION AL PUERTO B
    BCF	    PIR1, ADIF		; BORRAMOS BANDERA DE
;    RRF	    ADRESH, F		
;    RRF	    ADRESH, F
;    RRF	    ADRESH, W		; LE QUITAMOS LOS 3 BITS MENOS SIGNIFICATIVOS A LA CONVERSION
;    ANDLW   B'00011111'
    MOVWF   MELA			; MOVEMOS EL VALOR HACIA EL PERÍODO DEL PWM
    CALL    DELAY_SERVO2
    CALL    DELAY_50US
    MOVF    MELA,W
    CALL    CHECK_TXIF
    RETURN
    
CHECKADC3:
    BCF	    ADCON0,CHS0
    BSF	    ADCON0, CHS1
    CALL    DELAY_500US
    BSF    ADCON0, GO
    BTFSC   ADCON0, GO		; LOOP HASTA QUE TERMINE DE CONVERTIR
    GOTO    $-1
    MOVF    ADRESH, W
    ;MOVWF   PORTB			; MUEVE LA CONVERSION AL PUERTO B
    BCF	    PIR1, ADIF		; BORRAMOS BANDERA DE
;    RRF	    ADRESH, F		
;    RRF	    ADRESH, F
;    RRF	    ADRESH, W		; LE QUITAMOS LOS 3 BITS MENOS SIGNIFICATIVOS A LA CONVERSION
;    ANDLW   B'00011111'		
    MOVWF   MELE
    MOVF   MELE,W
    MOVWF   CCPR2L; MOVEMOS EL VALOR HACIA EL PERÍODO DEL PWM
    CALL    DELAY_50US
    MOVF    MELE,W
    CALL    CHECK_TXIF
;    CALL    DELAY_SERVO3
;    BSF	    ADCON0,CHS0
;    BSF	    ADCON0, CHS1
    RETURN
    
CHECKADC4:
    BSF	    ADCON0,CHS0
   BSF	    ADCON0, CHS1
    CALL    DELAY_500US
    BSF    ADCON0, GO
    BTFSC   ADCON0, GO		; LOOP HASTA QUE TERMINE DE CONVERTIR
    GOTO    $-1
    MOVF    ADRESH, W
    ;MOVWF   PORTB			; MUEVE LA CONVERSION AL PUERTO B
    BCF	    PIR1, ADIF		; BORRAMOS BANDERA DE
;    RRF	    ADRESH, F		
;    RRF	    ADRESH, F
;    RRF	    ADRESH, W		; LE QUITAMOS LOS 3 BITS MENOS SIGNIFICATIVOS A LA CONVERSION
;    ANDLW   B'00011111'		
    MOVWF   MELU
    MOVF   MELU,W
    MOVWF   CCPR1L; MOVEMOS EL VALOR HACIA EL PERÍODO DEL PWM
    CALL    DELAY_50US
    MOVF    MELU,W
    CALL    CHECK_TXIF
;;    CALL    DELAY_SERVO4    
    RETURN 
    
JUMPADC:
    INCF BANDERA,F
    
    MOVF BANDERA,W
    SUBLW  .5
    BTFSC   STATUS,Z
    CLRF BANDERA
    
    
    MOVF BANDERA,W
    SUBLW  .1
    BTFSC   STATUS,Z
    CALL CHECKADC1
    
    MOVF BANDERA,W
    SUBLW  .2
    BTFSC   STATUS,Z
    CALL CHECKADC2
    
    MOVF BANDERA,W
    SUBLW  .3
    BTFSC   STATUS,Z
    CALL CHECKADC3
    
    MOVF BANDERA,W
    SUBLW  .4
    BTFSC   STATUS,Z
    CALL CHECKADC4
    RETURN
    
    
    
;LOOP2:
;    BCF	PORTB,4
;    BSF	PORTB,5
;    BTFSC   PORTD,1
;    GOTO    PRESS2
;;    BCF	    ADCON0,CHS0
;;    BCF	    ADCON0, CHS1
;;    CALL    DELAY_500US
;;    BSF    ADCON0, GO		; EMPIECE LA CONVERSIÓN
;;CHECKADC1.2:
;;    BTFSC   ADCON0, GO		; LOOP HASTA QUE TERMINE DE CONVERTIR
;;    GOTO    CHECKADC1.2
;;    MOVF    ADRESH, W
;;    BCF	    PIR1, ADIF		; BORRAMOS BANDERA DE
;;    RRF	    ADRESH, F		
;;    RRF	    ADRESH, F
;;    RRF	    ADRESH, W		; LE QUITAMOS LOS 3 BITS MENOS SIGNIFICATIVOS A LA CONVERSION
;;    ANDLW   B'00011111'
;;    MOVWF   MELO			; MOVEMOS EL VALOR HACIA EL PERÍODO DEL PWM
;;    CALL    DELAY_50US
;;    MOVF    MELO,W
;;    CALL    CHECK_TXIF
;;    BSF	    ADCON0,CHS0
;;    BCF	    ADCON0, CHS1
;;    CALL    DELAY_500US
;;    BSF    ADCON0, GO
;;    
;;CHECKADC2.2:
;;    BTFSC   ADCON0, GO		; LOOP HASTA QUE TERMINE DE CONVERTIR
;;    GOTO    CHECKADC2.2
;;    MOVF    ADRESH, W
;;    BCF	    PIR1, ADIF		; BORRAMOS BANDERA DE
;;    RRF	    ADRESH, F		
;;    RRF	    ADRESH, F
;;    RRF	    ADRESH, W		; LE QUITAMOS LOS 3 BITS MENOS SIGNIFICATIVOS A LA CONVERSION
;;    ANDLW   B'00011111'		
;;    MOVWF   MELA			; MOVEMOS EL VALOR HACIA EL PERÍODO DEL PWM
;;    CALL    DELAY_50US
;;    MOVF    MELA,W
;;    CALL    CHECK_TXIF
;;    BCF	    ADCON0,CHS0
;;    BSF	    ADCON0, CHS1
;;    CALL    DELAY_500US
;;    BSF    ADCON0, GO
;;    
;;CHECKADC3.2:
;;    BTFSC   ADCON0, GO		; LOOP HASTA QUE TERMINE DE CONVERTIR
;;    GOTO    CHECKADC3.2
;;    MOVF    ADRESH, W
;;    BCF	    PIR1, ADIF		; BORRAMOS BANDERA DE
;;    RRF	    ADRESH, F		
;;    RRF	    ADRESH, F
;;    RRF	    ADRESH, W		; LE QUITAMOS LOS 3 BITS MENOS SIGNIFICATIVOS A LA CONVERSION
;;    ANDLW   B'00011111'		
;;    MOVWF   MELE
;;    CALL    DELAY_50US
;;    MOVF    MELE,W
;;    CALL    CHECK_TXIF
;;    BSF	    ADCON0,CHS0
;;    BSF	    ADCON0, CHS1
;;    CALL    DELAY_500US
;;    BSF    ADCON0, GO
;;CHECKADC4.2:
;;    BTFSC   ADCON0, GO		; LOOP HASTA QUE TERMINE DE CONVERTIR
;;    GOTO    CHECKADC4.2
;;    MOVF    ADRESH, W
;;    BCF	    PIR1, ADIF		; BORRAMOS BANDERA DE
;;    RRF	    ADRESH, F		
;;    RRF	    ADRESH, F
;;    RRF	    ADRESH, W		; LE QUITAMOS LOS 3 BITS MENOS SIGNIFICATIVOS A LA CONVERSION
;;    ANDLW   B'00011111'		
;;    MOVWF   MELU
;;    CALL    DELAY_50US
;;    MOVF    MELU,W
;;    CALL    CHECK_TXIF   
;    GOTO    LOOP2
;------------------------------SUBRUTINAS---------------------------------------
PRESS1:
    BTFSC PORTD,0
    GOTO $-1
    CALL DELAY_500US
    ;GOTO LOOP2
    
PRESS2:
    BTFSC PORTD,1
    GOTO $-1
    CALL DELAY_500US
    GOTO LOOP1
    
CHECK_RCIF:			    ; RECIBE EN RX y lo muestra en PORTD
    BTFSS   PIR1, RCIF
    GOTO    CHECK_TXIF
    MOVF    RCREG, W
    ;MOVWF   Nigga_beans
    ;MOVWF   CCPR2L   
    
CHECK_TXIF: 		    ; ENVÍA PORTB POR EL TX
    MOVWF   TXREG
    BTFSS   PIR1, TXIF
    GOTO    $-1
    ;MOVFW TEMP
    ;MOVWF PORTD
    RETURN
DELAY_500US
    MOVLW   .250		    ; 1US 
    MOVWF   DELAY1	    
    DECFSZ  DELAY1		    ;DECREMENTA CONT1
    GOTO    $-1			    ; IR A LA POSICION DEL PC - 1
    RETURN
DELAY_50US
    MOVLW   .25		    ; 1US 
    MOVWF   DELAY1	    
    DECFSZ  DELAY1		    ;DECREMENTA CONT1
    GOTO    $-1			    ; IR A LA POSICION DEL PC - 1
    RETURN
DELAY_SERVO1
    BSF   PORTB,7
    MOVF    MELO,W
    MOVWF   DMELO
    DECFSZ  DMELO
    GOTO    $-1
    INCF   MELOM
    MOVLW   .1
    SUBWF   MELOM
    BTFSS   STATUS,Z
    GOTO    DELAY_SERVO1
    BCF	    STATUS,Z
    CLRF    MELOM
    BCF    PORTB,7
    RETURN
DELAY_SERVO2
    BSF   PORTB,6
    MOVF    MELA,W
    MOVWF   DMELA
    DECFSZ  DMELA
    GOTO    $-1
    INCF   MELAM
    MOVLW   .1
    SUBWF   MELAM
    BTFSS   STATUS,Z
    GOTO    DELAY_SERVO2
    BCF	    STATUS,Z
    CLRF    MELAM
    BCF    PORTB,6
    RETURN
;DELAY_SERVO3
;    BSF   PORTB,5
;    MOVF    DMELE,W
;    MOVWF   DMELE
;    DECFSZ  DMELE
;    GOTO    $-1
;    INCF   MELEM
;    MOVLW   .1
;    SUBWF   MELEM
;    BTFSS   STATUS,Z
;    GOTO    DELAY_SERVO3
;    BCF	    STATUS,Z
;    CLRF    MELEM
;    BCF    PORTB,5
;    RETURN
;DELAY_SERVO4
;    BSF   PORTB,4
;    MOVF    DMELU,W
;    MOVWF   DMELU
;    DECFSZ  DMELU
;    GOTO    $-1
;    INCF   MELUM
;    MOVLW   .1
;    SUBWF   MELUM
;    BTFSS   STATUS,Z
;    GOTO    DELAY_SERVO4
;    BCF	    STATUS,Z
;    CLRF    MELUM
;    BCF    PORTB,4
;    RETURN
;----------------------------CONFIGURACIONES----------------------------------    
CONFIG_IO
    BANKSEL TRISA
    CLRF    TRISA
    BSF	    TRISA, RA0	; RA0 COMO ENTRADA
    CLRF    TRISB
    CLRF    TRISC
    CLRF    TRISD
    BSF	    TRISD,0
    BSF	    TRISD,1
    CLRF    TRISE
    BANKSEL ANSEL
    CLRF    ANSEL
    CLRF    ANSELH
    BSF	    ANSEL, 0	; ANS0 COMO ENTRADA ANALÓGICA
    BSF	    ANSEL, 1
    BSF	    ANSEL, 2
    BSF	    ANSEL, 3
    BANKSEL PORTA
    CLRF    PORTA
    CLRF    PORTB
    CLRF    PORTC
    CLRF    PORTD
    CLRF    MELO
    CLRF    MELA
    CLRF    MELE
    CLRF    MELU
    CLRF    MELOM
    CLRF    MELAM
    CLRF    MELEM
    CLRF    MELUM
    CLRF    DMELO
    CLRF    DMELA
    CLRF    DMELE
    CLRF    DMELU
    RETURN

CONFIG_INTERRUPT
    BSF	    INTCON, GIE		
    BSF	    INTCON, PEIE
    BSF	    INTCON, T0IE
    BSF	    INTCON, T0IF
    RETURN

CONFIG_ADC
    BANKSEL PORTA
    BCF ADCON0, ADCS1
    BSF ADCON0, ADCS0		; FOSC/8 RELOJ TAD
    
    BCF ADCON0, CHS3		; CANAL 0 PARA LA CONVERSION
    BCF ADCON0, CHS2
    BCF ADCON0, CHS1
    BCF ADCON0, CHS0	
    BANKSEL TRISA
    BCF ADCON1, ADFM		; JUSTIFICACIÓN A LA IZQUIERDA
    BCF ADCON1, VCFG1		; VSS COMO REFERENCIA VREF-
    BCF ADCON1, VCFG0		; VDD COMO REFERENCIA VREF+
    BANKSEL PORTA
    BSF ADCON0, ADON		; ENCIENDO EL MÓDULO ADC
    RETURN

CONFIG_OSCILATOR
    BANKSEL TRISA
    BSF OSCCON, IRCF2
    BCF OSCCON, IRCF1
    BCF OSCCON, IRCF0		; FRECUECNIA DE 1mHZ
    RETURN
CONFIG_T0
    BANKSEL TRISA
    BCF	    OPTION_REG,	T0CS
    BCF	    OPTION_REG,	PSA
    BSF	    OPTION_REG,	PS2
    BSF	    OPTION_REG,	PS1
    BSF	    OPTION_REG,	PS0
    BANKSEL PORTA
    MOVLW   .250
    MOVWF   TMR0
    BCF	    INTCON, T0IF
    RETURN
CONFIG_TX_RX
    BANKSEL TXSTA
    BCF	    TXSTA, SYNC		    ; A/SINCRÓNO
    BSF	    TXSTA, BRGH		    ; sin LOW SPEED
    BANKSEL BAUDCTL
    BSF	    BAUDCTL, BRG16	    ; 8 BITS BAURD RATE GENERATOR
    BANKSEL SPBRG
    MOVLW   .12	    
    MOVWF   SPBRG		    ; CARGAMOS EL VALOR DE BAUDRATE CALCULADO, 9603 baudios a 500Khz
    CLRF    SPBRGH
    BANKSEL RCSTA
    BSF	    RCSTA, SPEN		    ; HABILITAR SERIAL PORT
    BCF	    RCSTA, RX9		    ; SOLO MANEJAREMOS 8BITS DE DATOS
    BSF	    RCSTA, CREN		    ; HABILITAMOS LA RECEPCIÓN 
    BANKSEL TXSTA
    BSF	    TXSTA, TXEN		    ; HABILITO LA TRANSMISION
CONFIG_PWM
    BANKSEL TRISC
    BSF	    TRISC, RC1	
    BSF	    TRISC, RC2		; ESTABLEZCO RC1 / CCP2 COMO ENTRADA
    MOVLW   .46
    MOVWF   PR2			    ; COLOCO EL VALOR DEL PERIODO DE MI SEÑAL 20mS
    
    BANKSEL PORTA
    BSF	    CCP2CON, CCP2M3
    BSF	    CCP2CON, CCP2M2
    BSF	    CCP2CON, CCP2M1
    BSF	    CCP2CON, CCP2M0		    ; MODO PWM
    
    BSF	    CCP1CON, CCP1M3
    BSF	    CCP1CON, CCP1M2
    BSF	    CCP1CON, CCP1M1
    BSF	    CCP1CON, CCP1M0
    
    MOVLW   B'00011011'
    MOVWF   CCPR2L		    ; MSB   DEL DUTY CICLE
    BSF	    CCP2CON, DC2B0
    BSF	    CCP2CON, DC2B1	    ; LSB del duty cicle
    
    MOVLW   B'00011011'
    MOVWF   CCPR1L		    ; MSB   DEL DUTY CICLE
    BSF	    CCP1CON, DC1B0
    BSF	    CCP1CON, DC1B1	    ; LSB del duty cicl
    
    BCF	    PIR1, TMR2IF
    
    BSF	    T2CON, T2CKPS1
    BSF	    T2CON, T2CKPS0	    ; PRESCALER 1:16
    
    BSF	    T2CON, TMR2ON	    ; HABILITAMOS EL TMR2
    BTFSS   PIR1, TMR2IF
    GOTO    $-1
    BCF	    PIR1, TMR2IF
    
    BANKSEL TRISC
    BCF	    TRISC, RC1		    ; RC1 / CCP2 SALIDA PWM
    BCF	    TRISC, RC2		    ; RC1 / CCP2 SALIDA PWM
    RETURN
	
END
